import pandas as pd
import numpy as np
import os
import gzip
import functools

cohort_nms= ['harvestm12', 'harvestm24','rotterdam1', 'rotterdam2', 'normentfeb', 'normentmay']
smpl_nms= ['maternal','paternal', 'fetal']
CHR_nms= [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,12 ,13 ,14 ,15 ,16 ,17 ,18 ,19 ,20 ,21 ,22]

# Other arguments:

pruning_nms= ['none', 'soft', 'moderate', 'hard']

dens_nms= [5]
SNP_nms= [15, 25, 50, 75, 100, 150, 200, 350, 500]
length_nms= [0.0000001]
het_nms= [0, 1]
GAP_nms= [5]

dens_bp= [5000]
SNP_bp= [15, 25, 50, 75, 100, 150, 200, 350, 500]
length_bp= [0.0000001]
het_bp= [0, 1]
GAP_bp= [5000]

# Functions

def isfloat(str):
    try:
        float(str)
        return True
    except ValueError:
        return False

#### Figures

rule ParentalGR_offspringROH_fig:
        'Parental genetic relatedness and offspring ROH.'
        input:
                expand('/mnt/work/pol/{cohort}/pca/{cohort}_pca.txt', cohort= cohort_nms),
                expand('/mnt/work/pol/ROH/{cohort}/ibd/to_phase.fam', cohort= cohort_nms),
                expand('/mnt/work/pol/ROH/{cohort}/genotypes/none/pruned{cohort}_fetal.fam', cohort= cohort_nms),
                expand('/mnt/work/pol/ROH/{cohort}/ibd/parental_ibd.txt', cohort= cohort_nms),
                expand('/mnt/work/pol/{cohort}/pheno/flag_list.txt', cohort= cohort_nms),
                expand('/mnt/work/pol/ROH/{cohort}/pheno/{cohort}_trios.txt',cohort= cohort_nms),
                expand('/mnt/work/pol/{cohort}/relatedness/all_{cohort}.kin0', cohort= cohort_nms),
                expand('/mnt/work/pol/{cohort}/pca/all_pca_outliers_hapmap.txt', cohort= cohort_nms),
                expand('/mnt/work/pol/ROH/arguments/arg_R2_{cohort}.txt', cohort= cohort_nms),
                expand('/mnt/work/pol/ROH/{cohort}/multi/{pruning}_fetal_{dens}_{SNP}_{length}_{het}_{GAP}.hom.indiv', dens= dens_nms, SNP= SNP_nms, length= length_nms, het= het_nms, GAP= GAP_nms, pruning= pruning_nms, cohort= cohort_nms),
                expand('/mnt/work/pol/ROH/{cohort}/multi/{pruning}_bpfetal_{densbp}_{SNPbp}_{lengthbp}_{hetbp}_{GAPbp}.hom.indiv', densbp= dens_bp, SNPbp= SNP_bp, lengthbp= length_bp, hetbp= het_bp, GAPbp= GAP_bp, pruning= pruning_nms, cohort= cohort_nms)
        output:
                '/mnt/work/pol/ROH/figures/parent_offspring_assoc_optim.eps'
        script:
                'parental_relatedness_offspring_ROH.R'

rule ROH_calling_parameter_optimization_fig:
        ''
        input:
                expand('/mnt/work/pol/ROH/arguments/arg_R2_{cohort}.txt', cohort= cohort_nms)
        output:
                '/mnt/work/pol/ROH/figures/SNP_R2_optim.eps',
		'/mnt/work/pol/ROH/figures/cM_vs_bp_optim.eps',
                '/mnt/work/pol/ROH/figures/SNP_R2_optim_allcoh_nohet.eps',
		'/mnt/work/pol/ROH/figures/SNP_R2_optim_allcoh_1het.eps'
        script:
                'multiple_ROH.R'

rule manhattan_fig:
        ''
        input:
                '/mnt/work/pol/ROH/results/HC_maternal_surv_spont',
                '/mnt/work/pol/ROH/results/LC_maternal_surv_spont',
                '/mnt/work/pol/ROH/results/NC_maternal_surv_spont',
                '/mnt/work/pol/ROH/results/HC_fetal_surv_spont',
                '/mnt/work/pol/ROH/results/LC_fetal_surv_spont',
                '/mnt/work/pol/ROH/results/NC_fetal_surv_spont'
        output:
                '/mnt/work/pol/ROH/figures/zscore_mht_moms.eps',
                '/mnt/work/pol/ROH/figures/zscore_mht_fets.eps'
        script:
                'manhattan_plots.R'

rule hazard_curves_subcohorts_fig:
        ''
        input:
                expand('/mnt/work/pol/ROH/{cohort}/pheno/runs_mfr_maternal.txt', cohort= cohort_nms)
        output:
                '/mnt/work/pol/ROH/figures/hazard_allcoh.eps'
        script:
                'surv_curves.R'

rule frequency_fig:
        ''
        input:
                expand('/mnt/work/pol/ROH/results/ROH_freq_{sample}.txt', sample= smpl_nms),
		'/mnt/work/pol/ROH/ROH_frequency_maternal_chrX.txt'
        output:
                '/mnt/work/pol/ROH/figures/ROH_frequency.eps',
        script:
                'frequency_plots.R'

rule tmrca_fig:
        ''
        input:
                expand('/mnt/work/pol/ROH/{cohort}/pheno/runs_mfr_{sample}.txt', cohort= cohort_nms, sample= smpl_nms)
        output:
                '/mnt/work/pol/ROH/figures/tmrca.eps'
        script:
                'tmrca.R'

#### Tables:

rule AFT_FROH_table:
        'FROH and spontaneous delivery risk.'
        input:
                expand('/mnt/work/pol/{cohort}/pheno/q1_v9.txt',cohort= cohort_nms),
                expand('/mnt/work/pol/ROH/{cohort}/pheno/runs_mfr_{sample}.txt', cohort= cohort_nms, sample= smpl_nms),
		expand('/mnt/work/pol/ROH/{cohort}/results/het/{sample}_excess_hom.txt', sample= smpl_nms, cohort= cohort_nms)
        output:
                '/mnt/work/pol/ROH/tables/AFT_FROH.txt'
        script:
                'FROH_spont_risk.R'


rule description_cohorts_table:
	''
	input:
		expand('/mnt/work/pol/ROH/{cohort}/pheno/runs_mfr_maternal.txt', cohort= cohort_nms),
		expand('/mnt/work/pol/{cohort}/pheno/q1_v9.txt',cohort= cohort_nms)
	output:
		'/mnt/work/pol/ROH/tables/descr_cohorts.txt',
		'/mnt/work/pol/ROH/tables/pvalues_descr_cohorts.txt'
	script:
		'desc_table.R'

rule description_autozygosity_table:
	''
	input:
		expand('/mnt/work/pol/ROH/{cohort}/pheno/runs_mfr_{sample}.txt', cohort= cohort_nms, sample= smpl_nms),
		expand('/mnt/work/pol/ROH/{cohort}/results/het/{sample}_excess_hom.txt', sample= smpl_nms, cohort= cohort_nms)
	output:
		'/mnt/work/pol/ROH/tables/autoz_maternal.txt',
		'/mnt/work/pol/ROH/tables/autoz_paternal.txt',
		'/mnt/work/pol/ROH/tables/autoz_fetal.txt',
		'/mnt/work/pol/ROH/tables/autoz_all.txt'
	script:
		'autozygosity_tables.R'

rule annotation_HCindep_segments_table:
	''
	input:
		'/mnt/work/pol/ROH/annotation/independent_OMIM_HC_maternal.txt',
		'/mnt/work/pol/ROH/annotation/independent_OMIM_HC_fetal.txt',
		'/mnt/work/pol/ROH/results/ROH_freq_maternal.txt',
		'/mnt/work/pol/ROH/results/ROH_freq_fetal.txt',
		'/mnt/work/pol/ROH/annotation/GNOMAD/HC_maternal_VEP.txt',
		'/mnt/work/pol/ROH/annotation/GNOMAD/HC_fetal_VEP.txt',
		'/mnt/work/pol/ROH/results/HC_maternal_surv_spont',
		'/mnt/work/pol/ROH/results/HC_fetal_surv_spont'
	output:
		'/mnt/work/pol/ROH/tables/HC_indep_annotated.txt'
	run:
		dm= pd.read_csv(input[0], sep= '\t', header= 0)
		df= pd.read_csv(input[1], sep= '\t', header= 0)
		VEPm= pd.read_csv(input[4], sep= '\t', header= None, names= ['segment', 'variants', 'VEP_mod', 'VEP_high'])
		VEPf= pd.read_csv(input[5], sep= '\t', header= None, names= ['segment', 'variants', 'VEP_mod', 'VEP_high'])
		dm= pd.merge(dm, VEPm, on= 'segment', how= 'left')
		df= pd.merge(df, VEPf, on= 'segment', how= 'left')
		HCm= pd.read_csv(input[6], sep= '\t', header= 0, usecols= ['segment', 'pos1', 'pos2'])
		HCf= pd.read_csv(input[7], sep= '\t', header= 0, usecols= ['segment', 'pos1', 'pos2'])
		dm= pd.merge(dm, HCm, on= 'segment', how= 'left')
		df= pd.merge(df, HCf, on= 'segment', how= 'left')
		dm[['chr', 'cM1', 'cM2']]= dm['segment'].str.split(':', expand= True)
                dm[['chr', 'cM1', 'cM2']]= dm[['chr', 'cM1', 'cM2']].apply(lambda x: x.astype('float'))
                df[['chr', 'cM1', 'cM2']]= df['segment'].str.split(':', expand= True)
                df[['chr', 'cM1', 'cM2']]= df[['chr', 'cM1', 'cM2']].apply(lambda x: x.astype('float'))
                freqm= pd.read_csv(input[2], sep= '\t', header= 0)
                dm= pd.merge(dm, freqm, on= ['chr', 'cM1', 'cM2'], how= 'left')
                freqf= pd.read_csv(input[3], sep= '\t', header= 0)
                df= pd.merge(df, freqf, on= ['chr', 'cM1', 'cM2'], how= 'left')
		dm['size']= (dm.cM2 - dm.cM1) / 10**6
		df['size']= (df.cM2 - df.cM1) / 10**6
		dm['member']= 'Mother'
		df['member']= 'Fetus'
		d= pd.concat([dm, df])
		d.to_csv(output[0], sep= '\t', header= True, index= False)


rule annotation_HC_segments:
        ''
        input:
                '/mnt/work/pol/ROH/annotation/OMIM_HC_maternal.txt',
                '/mnt/work/pol/ROH/annotation/OMIM_HC_fetal.txt',
                '/mnt/work/pol/ROH/results/ROH_freq_maternal.txt',
                '/mnt/work/pol/ROH/results/ROH_freq_fetal.txt',
                '/mnt/work/pol/ROH/annotation/GNOMAD/HC_maternal_VEP.txt',
                '/mnt/work/pol/ROH/annotation/GNOMAD/HC_fetal_VEP.txt',
                '/mnt/work/pol/ROH/results/HC_maternal_surv_spont',
                '/mnt/work/pol/ROH/results/HC_fetal_surv_spont'
        output:
                '/mnt/work/pol/ROH/tables/HC_annotated.txt'
        run:
                dm= pd.read_csv(input[0], sep= '\t', header= 0, usecols= ['segment', 'gene', 'EntrezID', 'cyto', 'Mim'])
                df= pd.read_csv(input[1], sep= '\t', header= 0, usecols= ['segment', 'gene', 'EntrezID', 'cyto', 'Mim'])
                VEPm= pd.read_csv(input[4], sep= '\t', header= None, names= ['segment', 'variants', 'VEP_mod', 'VEP_high'])
                VEPf= pd.read_csv(input[5], sep= '\t', header= None, names= ['segment', 'variants', 'VEP_mod', 'VEP_high'])
                dm= pd.merge(dm, VEPm, on= 'segment', how= 'left')
                df= pd.merge(df, VEPf, on= 'segment', how= 'left')
                HCm= pd.read_csv(input[6], sep= '\t', header= 0, usecols= ['segment', 'pos1', 'pos2'])
                HCf= pd.read_csv(input[7], sep= '\t', header= 0, usecols= ['segment', 'pos1', 'pos2'])
                dm= pd.merge(dm, HCm, on= 'segment', how= 'left')
                df= pd.merge(df, HCf, on= 'segment', how= 'left')
                dm[['chr', 'cM1', 'cM2']]= dm['segment'].str.split(':', expand= True)
                dm[['chr', 'cM1', 'cM2']]= dm[['chr', 'cM1', 'cM2']].apply(lambda x: x.astype('float'))
                df[['chr', 'cM1', 'cM2']]= df['segment'].str.split(':', expand= True)
                df[['chr', 'cM1', 'cM2']]= df[['chr', 'cM1', 'cM2']].apply(lambda x: x.astype('float'))
                freqm= pd.read_csv(input[2], sep= '\t', header= 0)
                dm= pd.merge(dm, freqm, on= ['chr', 'cM1', 'cM2'], how= 'left')
                freqf= pd.read_csv(input[3], sep= '\t', header= 0)
                df= pd.merge(df, freqf, on= ['chr', 'cM1', 'cM2'], how= 'left')
                dm['size']= (dm.cM2 - dm.cM1) / 10**6
                df['size']= (df.cM2 - df.cM1) / 10**6
                dm['member']= 'Mother'
                df['member']= 'Fetus'
                d= pd.concat([dm, df])
                d.to_csv(output[0], sep= '\t', header= True, index= False)


######## Supplementary Figures

rule S1_figures:
	''
	input:
		'/mnt/work/pol/ROH/figures/SNP_R2_optim_allcoh_nohet.eps',
		'/mnt/work/pol/ROH/figures/SNP_R2_optim_allcoh_1het.eps'
	output:
		'/mnt/work/pol/ROH/figures/S1_Figures.pdf'
	script:
		'S1_figures.Rmd'

rule S2_figure:
	''
	input:
		'/mnt/work/pol/ROH/figures/parent_offspring_assoc_optim.eps'
	output:
		'/mnt/work/pol/ROH/figures/S2_Figure.pdf'
	script:
		'S2_figure.Rmd'

rule S3_figure:
	''
	input:
		'/mnt/work/pol/ROH/figures/ROH_frequency.eps'
	output:
		'/mnt/work/pol/ROH/figures/S3_Figure.pdf'
	script:
		'S3_figure.Rmd'

####### Supplementary Tables:

rule S1_table:
	''
	input:
		'/mnt/work/pol/ROH/tables/descr_cohorts.txt',
		'/mnt/work/pol/ROH/tables/pvalues_descr_cohorts.txt'
	output:
		'/mnt/work/pol/ROH/tables/S1_Table.pdf'
	script:
		'S1_table.Rmd'

rule S2_table:
	''
	output:
		'/mnt/work/pol/ROH/tables/S2_Table.pdf'
	script:
		'S2_table.Rmd'

rule S3_tables:
	''
	input:
		'/mnt/work/pol/ROH/tables/autoz_all.txt',
		'/mnt/work/pol/ROH/tables/autoz_maternal.txt',
		'/mnt/work/pol/ROH/tables/autoz_paternal.txt',
		'/mnt/work/pol/ROH/tables/autoz_fetal.txt'
	output:
		'/mnt/work/pol/ROH/tables/S3_Tables.pdf'
	script:
		'S3_table.Rmd'

rule S4_table:
        ''
        input:
                '/mnt/work/pol/ROH/results/imputed/surv_imputed_maternal.txt',
		'/mnt/work/pol/ROH/annotation/genes_imputed_maternal.txt',
		expand('/mnt/work/pol/{cohort}/info/INFO.txt.gz', cohort= cohort_nms)
		
        output:
                '/mnt/work/pol/ROH/tables/S4_Table.pdf'
        script:
                'S4_table.Rmd'

rule S5_table:
        ''
        input:
                '/mnt/work/pol/ROH/results/imputed/replication/surv_moms.txt',
		'/mnt/work/pol/ROH/results/imputed/surv_imputed_maternal.txt',
                '/mnt/work/pol/ROH/annotation/genes_imputed_maternal.txt',
                '/mnt/work/pol/normentjan/info/INFO.txt.gz',
		'/mnt/work/pol/normentjun/info/INFO.txt.gz'

        output:
                '/mnt/work/pol/ROH/tables/S5_Table.pdf'
        script:
                'S5_table.Rmd'
